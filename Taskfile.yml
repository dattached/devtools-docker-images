version: '3'

vars:
  ORG: dattached
  LOCAL: .local
  # versions
  BOOTSTRAP_VERSION: {sh: sed -ne 's/ARG VERSION=\(.*\)/\1/p' bootstrap/Dockerfile}
  LAZYDOCKER_VERSION: {sh: sed -ne 's/ARG LAZYDOCKER_VERSION=\(.*\)/\1/p' lazydocker/Dockerfile}
  USQL_VERSION: {sh: sed -ne 's/ARG USQL_VERSION=\(.*\)/\1/p' usql/Dockerfile}
  VERSIONS:
    ref: dict
      "bootstrap" .BOOTSTRAP_VERSION
      "lazydocker" .LAZYDOCKER_VERSION
      "usql" .USQL_VERSION

env:
  DOCKER_CONFIG: '{{.LOCAL}}/docker'

tasks:

  # docker

  login:
    internal: true
    status:
      - test -d ${DOCKER_CONFIG}
    cmds:
      - mkdir -p ${DOCKER_CONFIG}
      - docker -c default login -u {{.ORG}}

  logout:
    internal: true
    cmds:
      - docker logout

  # prepare

  prepare:*:
    desc: Prepare dattached/* local prerequisites.
    vars:
      IMG: '{{index .MATCH 0}}'
    cmds:
      - task: prepare:{{.IMG}}:all

  prepare:bootstrap:all:
    cmds:
      - task: prepare:bootstrap:docs
      - task: prepare:bootstrap:util:shflags

  prepare:bootstrap:docs:
    sources: [bootstrap/scripts/*.sh]
    generates: [bootstrap.md]
    cmds:
      - echo "# Bootstrap scripts" > bootstrap.md
      - cmd: >
          echo -e '\n## {{base .ITEM}}\n```' >> bootstrap.md;
          bash {{.ITEM}} --help >> bootstrap.md 2>&1 || true;
          echo '```' >> bootstrap.md;
        for: sources
        silent: true

  prepare:bootstrap:util:shflags:
    vars:
      SHFLAGS_VERSION: 1.3.0  # todo: check latest version
      SHFLAGS_URL: https://raw.githubusercontent.com/kward/shflags/v{{.SHFLAGS_VERSION}}/shflags
      SHFLAGS_PATH: bootstrap/scripts/lib/shflags
    status:
      - test -f {{.SHFLAGS_PATH}}
      - grep -Fxq "FLAGS_VERSION='{{.SHFLAGS_VERSION}}'" {{.SHFLAGS_PATH}}
    cmds:
      - wget -q -O {{.SHFLAGS_PATH}} {{.SHFLAGS_URL}}

  prepare:lazydocker:all:
    status: [/bin/true]  # todo: check latest versions in Dockerfile

  prepare:usql:all:
    status: [/bin/true]  # todo: check latest versions in Dockerfile

  # build

  build:*:
    desc: Build dattached/* docker image.
    deps: [login, 'prepare:{{.IMG}}']
    vars:
      IMG: '{{index .MATCH 0}}'
      VERSION: '{{get .VERSIONS .IMG}}'
      VERSION_MINOR: '{{join "." (slice (splitList "." .VERSION) 0 2)}}'
    cmds:
      - docker build
          --tag {{.ORG}}/{{.IMG}}:{{.VERSION}}
          --tag {{.ORG}}/{{.IMG}}:{{.VERSION_MINOR}}
          {{.IMG}}

  # test run

  testrun:*:
    desc: Run newly built dattached/* image.
    vars:
      IMG: '{{index .MATCH 0}}'
    env:
      COMPOSE_FILE: '{{.IMG}}/test/compose.yml'
    cmds:
      - docker compose down  # handle previous failures
      - docker compose up {{.IMG}}
      - defer: docker compose down

  # publish

  publish:*:
    desc: Publish newly built dattached/* image.
    deps: ['build:{{.IMG}}']
    vars:
      IMG: '{{index .MATCH 0}}'
      VERSION: '{{get .VERSIONS .IMG}}'
      VERSION_MINOR: '{{join "." (slice (splitList "." .VERSION) 0 2)}}'
    cmds:
      - docker push "{{.ORG}}/{{.IMG}}:{{.VERSION}}"
      - docker push "{{.ORG}}/{{.IMG}}:{{.VERSION_MINOR}}"

  # clean

  clean:
    desc: Cleanup local files.
    cmds:
      - task: logout
      - rm -rf {{.LOCAL}}

  # helpers

  term:
    desc: Run dev terminal.
    cmds:
      - sh -c 'alacritty --hold --working-directory {{.ROOT_DIR}} -T {{base .ROOT_DIR}} &'
