version: '3'

vars:
  ORG: dattached
  LOCAL: .local
  # versions
  LAZYDOCKER_VERSION: {sh: sed -ne 's/ARG LAZYDOCKER_VERSION=\(.*\)/\1/p' lazydocker/Dockerfile}
  USQL_VERSION: {sh: sed -ne 's/ARG USQL_VERSION=\(.*\)/\1/p' usql/Dockerfile}
  VERSIONS:
    ref: dict
      "lazydocker" .LAZYDOCKER_VERSION
      "usql" .USQL_VERSION

env:
  DOCKER_CONFIG: '{{.LOCAL}}/docker'

tasks:

  login:
    internal: true
    status:
      - test -d ${DOCKER_CONFIG}
    cmds:
      - mkdir -p ${DOCKER_CONFIG}
      - docker -c default login -u {{.ORG}}

  logout:
    internal: true
    cmds:
      - docker logout

  build:*:
    desc: Build dattached/* docker image.
    deps: [login]
    vars:
      TOOL: '{{index .MATCH 0}}'
      VERSION: '{{get .VERSIONS .TOOL}}'
      VERSION_MINOR: '{{join "." (slice (splitList "." .VERSION) 0 2)}}'
    cmds:
      - docker build
          --tag {{.ORG}}/{{.TOOL}}:{{.VERSION}}
          --tag {{.ORG}}/{{.TOOL}}:{{.VERSION_MINOR}}
          --tag {{.ORG}}/{{.TOOL}}:latest
          {{.TOOL}}

  testrun:*:
    desc: Run newly built dattached/* image.
    vars:
      TOOL: '{{index .MATCH 0}}'
    env:
      COMPOSE_FILE: '{{.TOOL}}/test/compose.yml'
    cmds:
      - docker compose run --rm {{.TOOL}}
      - defer: docker compose down

  publish:*:
    desc: Publish newly built dattached/* image.
    deps: ['build:{{.TOOL}}']
    vars:
      TOOL: '{{index .MATCH 0}}'
    cmds:
      - docker push --all-tags "{{.ORG}}/{{.TOOL}}"

  clean:
    desc: Cleanup local files.
    cmds:
      - task: logout
      - rm -rf {{.LOCAL}}

  # helpers

  term:
    desc: Run dev terminal.
    cmds:
      - sh -c 'alacritty --hold --working-directory {{.ROOT_DIR}} -T {{base .ROOT_DIR}} &'
